# .gitlab-ci.yml

stages:
  - build
  - test
  - lint

variables:
  POSTGRES_DB: gces_db
  POSTGRES_USER: gces_user
  POSTGRES_PASSWORD: gces_password
  POSTGRES_HOST_AUTH_METHOD: trust
  DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
  SECRET_KEY: "uma-chave-secreta-qualquer-para-o-ambiente-de-ci"

# --- ETAPA DE BUILD ---
build_backend:
  stage: build
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: dockerdaemon
  variables:
    DOCKER_HOST: tcp://dockerdaemon:2375
  script:
    - docker build -f Dockerfile -t meu-backend-img:ci .

build_frontend:
  stage: build
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: dockerdaemon
  variables:
    DOCKER_HOST: tcp://dockerdaemon:2375
  script:
    - docker build -f www/Dockerfile -t meu-frontend-img:ci ./www

# --- ETAPA DE TESTE ---
test_backend:
  stage: test
  image: python:3.8-slim
  services:
    - name: postgres:15
      alias: postgres
  before_script:
    - apt-get update && apt-get install -y postgresql-client
    # CORREÇÃO: Instalar o binário ANTES dos outros requisitos
    - pip install psycopg2-binary
    - pip install -r requirements.txt
  script:
    - echo "Aguardando o Postgres ficar pronto..."
    - timeout 20 bash -c "until pg_isready -h postgres -p 5432; do sleep 1; done"
    - echo "Postgres pronto. Executando migrações..."
    - python manage.py migrate
    - echo "Executando testes do backend..."
    - python manage.py test api

test_frontend:
  stage: test
  image: node:20-alpine
  script:
    # CORREÇÃO: Entrar no diretório do frontend primeiro
    - cd www
    - echo "Executando teste simples de Node.js para o frontend..."
    - node tests/Home.test.js