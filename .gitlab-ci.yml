stages:
  - build
  - test
  - lint

# Variáveis globais para configurar o serviço do Postgres
variables:
  POSTGRES_DB: gces_db
  POSTGRES_USER: gces_user
  POSTGRES_PASSWORD: gces_password
  POSTGRES_HOST_AUTH_METHOD: trust
  # Variáveis para a aplicação Django se conectar ao serviço
  DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
  SECRET_KEY: "uma-chave-secreta-qualquer-para-o-ambiente-de-ci"


build_backend:
  stage: build
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: dockerdaemon
  variables:
    DOCKER_HOST: tcp://dockerdaemon:2375
  script:
    - docker build -f Dockerfile -t meu-backend-img:ci .

build_frontend:
  stage: build
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: dockerdaemon
  variables:
    DOCKER_HOST: tcp://dockerdaemon:2375
  script:
    - docker build -f www/Dockerfile -t meu-frontend-img:ci ./www



test_backend:
  stage: test
  image: python:3.8
  services:
    - name: postgres:15
      alias: postgres
  before_script:
    - apt-get update && apt-get install -y postgresql-client
    - pip install psycopg2-binary
    - grep -v 'psycopg2' requirements.txt > requirements_ci.txt
    - pip install -r requirements_ci.txt
    - pip install --force-reinstall "PyJWT==1.7.1"
  script:
    - echo "Aguardando o Postgres..."
    - timeout 30 bash -c "until pg_isready -h postgres -p 5432; do sleep 1; done"
    - echo "Postgres pronto. Rodando migrações..."
    - python manage.py migrate
    - echo "Executando testes do backend..."
    - python manage.py test api

test_frontend:
  stage: test
  image: node:20
  script:
    - cd www
    - echo "Executando teste simples de Node.js..."
   
    - node tests/home.test.js


lintian-backend:
  stage: lint
  image: python:3.8
  before_script:
    - pip install --user flake8
    - export PATH=$PATH:/root/.local/bin
  script:
    - flake8 .

lintian_frontend:
  stage: lint
  image: node:20-alpine
  before_script:
    - cd www
    - echo "Instalando dependências (incluindo ESLint)..."
    - npm install
    
    - npm install eslint@8
  script:
    - echo "Executando o linter ESLint no código do frontend..."
    - npx eslint . || true